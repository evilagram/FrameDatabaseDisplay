/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finalproject.ChrisWagar;
import java.util.*;
import javax.swing.*;
/**
 *
 * @author kakarlapudir
 */
public class frm_UserMaintenance extends javax.swing.JFrame {
    //private ArrayList<User> moveList = new ArrayList<User>();
    private ArrayList<Move> moveList = new ArrayList<Move>();
    private String dataPath = "C:\\Temp\\MoveList.dat";
    
    private DefaultListModel moveListModel = new DefaultListModel();
    JList moveJList = new JList(moveListModel);
    /**
     * Creates new form my form
     */
    public frm_UserMaintenance() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenuBar4 = new javax.swing.JMenuBar();
        jMenu6 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();
        jMenuBar5 = new javax.swing.JMenuBar();
        jMenu8 = new javax.swing.JMenu();
        jMenu9 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        lst_Move = new javax.swing.JList();
        txt_MoveID = new javax.swing.JTextField();
        txt_MoveName = new javax.swing.JTextField();
        txt_Startup = new javax.swing.JTextField();
        lbl_MoveID = new javax.swing.JLabel();
        lbl_MoveName = new javax.swing.JLabel();
        lbl_Startup = new javax.swing.JLabel();
        lbl_Active = new javax.swing.JLabel();
        btn_SaveChanges = new javax.swing.JButton();
        txt_Active = new javax.swing.JTextField();
        txt_Recovery = new javax.swing.JTextField();
        lbl_Recovery = new javax.swing.JLabel();
        btn_AddNewMove = new javax.swing.JButton();
        txt_Hitstun = new javax.swing.JTextField();
        txt_Blockstun = new javax.swing.JTextField();
        lbl_Blockstun = new javax.swing.JLabel();
        lbl_Hitstun = new javax.swing.JLabel();
        txt_HitAdv = new javax.swing.JTextField();
        txt_BlockAdv = new javax.swing.JTextField();
        lbl_BlockAdv = new javax.swing.JLabel();
        lbl_HitAdv = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lbl_MoveType = new javax.swing.JLabel();
        cmb_MoveType = new javax.swing.JComboBox<>();
        jSeparator2 = new javax.swing.JSeparator();
        lbl_Damage = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        txt_damage = new javax.swing.JTextField();
        chk_SpecialCancel = new javax.swing.JCheckBox();
        chk_SuperCancel = new javax.swing.JCheckBox();
        jMenuBar2 = new javax.swing.JMenuBar();
        mnu_SaveFile = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        mnu_Exit = new javax.swing.JMenuItem();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("jMenu3");

        jMenu4.setText("File");
        jMenuBar3.add(jMenu4);

        jMenu5.setText("Edit");
        jMenuBar3.add(jMenu5);

        jMenu6.setText("File");
        jMenuBar4.add(jMenu6);

        jMenu7.setText("Edit");
        jMenuBar4.add(jMenu7);

        jMenu8.setText("File");
        jMenuBar5.add(jMenu8);

        jMenu9.setText("Edit");
        jMenuBar5.add(jMenu9);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lst_Move.setSelectionForeground(new java.awt.Color(255, 51, 0));
        lst_Move.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lst_MoveMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lst_Move);

        txt_MoveID.setEditable(false);
        txt_MoveID.setText("0");
        txt_MoveID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_MoveIDActionPerformed(evt);
            }
        });

        lbl_MoveID.setText("Move ID No.:");

        lbl_MoveName.setText("Move Name:");

        lbl_Startup.setText("Startup:");

        lbl_Active.setText("Active:");

        btn_SaveChanges.setText("Save changes");
        btn_SaveChanges.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_SaveChangesMouseClicked(evt);
            }
        });

        txt_Recovery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_RecoveryActionPerformed(evt);
            }
        });

        lbl_Recovery.setText("Recovery:");

        btn_AddNewMove.setText("Add New Move");
        btn_AddNewMove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddNewMoveActionPerformed(evt);
            }
        });

        txt_Blockstun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_BlockstunActionPerformed(evt);
            }
        });

        lbl_Blockstun.setText("Blockstun:");

        lbl_Hitstun.setText("Hitstun:");

        txt_HitAdv.setEditable(false);

        txt_BlockAdv.setEditable(false);
        txt_BlockAdv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_BlockAdvActionPerformed(evt);
            }
        });

        lbl_BlockAdv.setText("Advantage on Block:");

        lbl_HitAdv.setText("Advantage on Hit:");

        lbl_MoveType.setText("Move Type:");

        cmb_MoveType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal", "Special", "Super" }));

        lbl_Damage.setText("Damage");

        chk_SpecialCancel.setText("Special Cancellable");

        chk_SuperCancel.setText("Super Cancellable");
        chk_SuperCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_SuperCancelActionPerformed(evt);
            }
        });

        mnu_SaveFile.setText("File");

        jMenuItem1.setText("Save file");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        mnu_SaveFile.add(jMenuItem1);

        mnu_Exit.setText("Exit");
        mnu_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnu_ExitActionPerformed(evt);
            }
        });
        mnu_SaveFile.add(mnu_Exit);

        jMenuBar2.add(mnu_SaveFile);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(67, 67, 67)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbl_Startup)
                                            .addComponent(lbl_MoveID)
                                            .addComponent(lbl_Active)
                                            .addComponent(lbl_Recovery)
                                            .addComponent(lbl_HitAdv)
                                            .addComponent(lbl_BlockAdv)
                                            .addComponent(lbl_Damage)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(59, 59, 59)
                                        .addComponent(btn_AddNewMove)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txt_Recovery, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                                        .addComponent(txt_Active, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txt_Startup, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(btn_SaveChanges, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txt_BlockAdv, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txt_HitAdv, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txt_MoveID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_damage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbl_Hitstun)
                                            .addComponent(lbl_Blockstun))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_Blockstun, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txt_Hitstun, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lbl_MoveType)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cmb_MoveType, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lbl_MoveName)
                                            .addGap(101, 101, 101)
                                            .addComponent(txt_MoveName, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(49, 49, 49))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2)
                            .addComponent(jSeparator1)
                            .addComponent(jSeparator3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(chk_SpecialCancel)
                        .addGap(18, 18, 18)
                        .addComponent(chk_SuperCancel)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_MoveID)
                    .addComponent(txt_MoveID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_MoveName)
                    .addComponent(txt_MoveName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_MoveType)
                    .addComponent(cmb_MoveType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Startup)
                    .addComponent(txt_Startup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_Active, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_Recovery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_Active)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_Recovery)))
                .addGap(15, 15, 15)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Hitstun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_Hitstun))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Blockstun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_Blockstun))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_HitAdv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_BlockAdv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(lbl_HitAdv)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbl_BlockAdv)))
                .addGap(4, 4, 4)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Damage)
                    .addComponent(txt_damage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chk_SpecialCancel)
                    .addComponent(chk_SuperCancel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_AddNewMove)
                    .addComponent(btn_SaveChanges))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_MoveIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_MoveIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_MoveIDActionPerformed

    private void txt_RecoveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_RecoveryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_RecoveryActionPerformed

    private void mnu_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnu_ExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_mnu_ExitActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setTitle("551B Final Project");
        lst_Move.removeAll();
        moveList = FileHandle.GetFileData(dataPath);
        RefreshList();
    }//GEN-LAST:event_formWindowOpened

    private void lst_MoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lst_MoveMouseClicked
        // TODO FI THIS NEXT:
        JList tempList = lst_Move;
        MoveListItem temp = (MoveListItem)tempList.getSelectedValue();
        if(temp!=null){
            //JOptionPane.showMessageDialog(this, temp.UserID);
            txt_MoveID.setText(String.valueOf(temp.MoveID));
            txt_MoveName.setText(String.valueOf(temp.MoveName));
            switch(temp.MType){
                case NORMAL:
                   cmb_MoveType.setSelectedIndex(0);
                    break;
                case SPECIAL:
                    cmb_MoveType.setSelectedIndex(1);
                    break;
                case SUPER:
                   cmb_MoveType.setSelectedIndex(2);
                    break;
            }
            txt_Startup.setText(String.valueOf(temp.Startup));
            txt_Active.setText(String.valueOf(temp.Active));
            txt_Recovery.setText(String.valueOf(temp.Recovery));
            txt_Hitstun.setText(String.valueOf(temp.Hitstun));
            txt_Blockstun.setText(String.valueOf(temp.Blockstun));
            txt_HitAdv.setText(String.valueOf(temp.FrameAdvantage));
            txt_BlockAdv.setText(String.valueOf(temp.BlockAdvantage));
            txt_damage.setText(String.valueOf(temp.Damage));
            if(temp.SpecialCancel == true){
                chk_SpecialCancel.setSelected(true);
            }else{
                chk_SpecialCancel.setSelected(false);
            }
            if(temp.SuperCancel == true){
                chk_SuperCancel.setSelected(true);
            }else{
                chk_SuperCancel.setSelected(false);
            }
        }
    }//GEN-LAST:event_lst_MoveMouseClicked

    private void btn_SaveChangesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_SaveChangesMouseClicked
        // TODO add your handling code here:
        JList tempList = lst_Move;
        int myIndex = tempList.getSelectedIndex();
        /*
        User updatedUser;
        int moveID = Integer.parseInt(txt_MoveID.getText());
        String userLName = txt_MoveName.getText();
        String userFName = txt_Startup.getText();
        String userUID = txt_Active.getText();
        String userPWD = txt_Recovery.getText();*/
        try{
        Move updatedMove;
        int moveID = Integer.parseInt(txt_MoveID.getText());
        String moveName = txt_MoveName.getText();
        if(moveName == ""){
            throw new Exception();
        }
        MoveType mType = MoveType.NORMAL;
        switch(cmb_MoveType.getSelectedIndex()){
            case 0:
                mType = MoveType.NORMAL;
                break;
            case 1:
                mType = MoveType.SPECIAL;
                break;
            case 2:
                mType = MoveType.SUPER;
                break;
        }
        int startup = Integer.parseInt(txt_Startup.getText());
        int active = Integer.parseInt(txt_Active.getText());
        int recovery = Integer.parseInt(txt_Recovery.getText());
        int hitstun = Integer.parseInt(txt_Hitstun.getText());
        int blockstun = Integer.parseInt(txt_Blockstun.getText());
        int damage = Integer.parseInt(txt_damage.getText());
        boolean specialCancel = chk_SpecialCancel.isSelected();
        boolean superCancel = chk_SuperCancel.isSelected();
        if(moveID > 0){
            updatedMove = new Move(moveID, moveName, mType, startup, active, recovery, hitstun, blockstun, damage, specialCancel, superCancel);
            moveList.set(myIndex, updatedMove);
        }
        else{
            moveID=GetNextMoveID();
            txt_MoveID.setText(String.valueOf(moveID));
            updatedMove = new Move(moveID, moveName, mType, startup, active, recovery, hitstun, blockstun, damage, specialCancel, superCancel);
            moveList.add(updatedMove);
        }
        moveListModel.removeAllElements();
        RefreshList();
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Some Data is Invalid. Please Make sure all fields except Name are numeric and are properly filled in.");
        }
    }//GEN-LAST:event_btn_SaveChangesMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        FileHandle.SetFileData(dataPath, moveList);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void btn_AddNewMoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddNewMoveActionPerformed
        // TODO FIX THIS NEXT:
        lst_Move.clearSelection();
        txt_MoveID.setText("0");
        txt_MoveName.setText("");
        cmb_MoveType.setSelectedIndex(0);
        txt_Startup.setText("");
        txt_Active.setText("");
        txt_Recovery.setText("");
        txt_Hitstun.setText("");
        txt_Blockstun.setText("");
        txt_HitAdv.setText("");
        txt_BlockAdv.setText("");
        txt_damage.setText("");
        chk_SpecialCancel.setSelected(false);
        chk_SuperCancel.setSelected(false);
    }//GEN-LAST:event_btn_AddNewMoveActionPerformed

    private void txt_BlockstunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_BlockstunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_BlockstunActionPerformed

    private void txt_BlockAdvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_BlockAdvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_BlockAdvActionPerformed

    private void chk_SuperCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_SuperCancelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_SuperCancelActionPerformed
    void RefreshList(){
        for(int i = 0; i < moveList.size();i++){
            moveListModel.addElement(new MoveListItem(moveList.get(i).getMoveID(),
            moveList.get(i).getMoveName(),
            moveList.get(i).getMoveType(),
            moveList.get(i).getStartup(),
            moveList.get(i).getActive(),
            moveList.get(i).getRecovery(),
            moveList.get(i).getHitstun(),
            moveList.get(i).getBlockstun(),
            moveList.get(i).getDamage(),
            moveList.get(i).getSpecialCancel(),
            moveList.get(i).getSuperCancel()
            ));
        }
        lst_Move.setModel(moveListModel);
    }
    int GetNextMoveID(){
        int bigMoveID = 0;
        int tempMoveID;
        for(int i = 0; i < moveList.size();i++){
            tempMoveID = moveList.get(i).getMoveID();
            if(i<tempMoveID){
                bigMoveID = tempMoveID;
            }
        }
        return bigMoveID + 1;
    }
    

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_UserMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_UserMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_UserMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_UserMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_UserMaintenance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_AddNewMove;
    private javax.swing.JButton btn_SaveChanges;
    private javax.swing.JCheckBox chk_SpecialCancel;
    private javax.swing.JCheckBox chk_SuperCancel;
    private javax.swing.JComboBox<String> cmb_MoveType;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuBar jMenuBar4;
    private javax.swing.JMenuBar jMenuBar5;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lbl_Active;
    private javax.swing.JLabel lbl_BlockAdv;
    private javax.swing.JLabel lbl_Blockstun;
    private javax.swing.JLabel lbl_Damage;
    private javax.swing.JLabel lbl_HitAdv;
    private javax.swing.JLabel lbl_Hitstun;
    private javax.swing.JLabel lbl_MoveID;
    private javax.swing.JLabel lbl_MoveName;
    private javax.swing.JLabel lbl_MoveType;
    private javax.swing.JLabel lbl_Recovery;
    private javax.swing.JLabel lbl_Startup;
    private javax.swing.JList lst_Move;
    private javax.swing.JMenuItem mnu_Exit;
    private javax.swing.JMenu mnu_SaveFile;
    private javax.swing.JTextField txt_Active;
    private javax.swing.JTextField txt_BlockAdv;
    private javax.swing.JTextField txt_Blockstun;
    private javax.swing.JTextField txt_HitAdv;
    private javax.swing.JTextField txt_Hitstun;
    private javax.swing.JTextField txt_MoveID;
    private javax.swing.JTextField txt_MoveName;
    private javax.swing.JTextField txt_Recovery;
    private javax.swing.JTextField txt_Startup;
    private javax.swing.JTextField txt_damage;
    // End of variables declaration//GEN-END:variables
}
